import os
import logging
import asyncio
from telegram import Update, InputMediaPhoto
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes
from utils import parse_bidcars_lot, search_bidcars_lots
from shipping import estimate_shipping_to_belarus_usd, estimate_shipping_via_poti_usd, format_currency
from damage_detector import analyze_damage_from_file
from customs import estimate_customs_by_engine_and_age

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

BOT_TOKEN = 8398152709:AAGE8IwxgAcnQ3UxcACp6WF9Wdh0Qynx04
if not BOT_TOKEN:
    raise SystemExit("Error: BOT_TOKEN environment variable is not set. Put your Telegram bot token in BOT_TOKEN.")

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –±–æ—Ç –∏–º–ø–æ—Ä—Ç–∞ –∞–≤—Ç–æ.\n\n"
        "–ö–æ–º–∞–Ω–¥—ã:\n"
        "/lot <link> ‚Äî —Å—á–∏—Ç–∞—Ç—å –ø–æ —Å—Å—ã–ª–∫–µ —Å bid.cars\n"
        "/estimate ‚Äî –æ—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è (–∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö) –¥–ª—è –æ—Ü–µ–Ω–∫–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏–π –∏ —Ä–∞—Å—á—ë—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ '–ø–æ–¥ –∫–ª—é—á'.\n\n"
        "–¢–∞–∫–∂–µ –º–æ–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –ª–æ—Ç –∏–ª–∏ —Ñ–æ—Ç–æ."
    )

async def help_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ö–æ–º–∞–Ω–¥—ã: /start /help /lot <link> /estimate (–æ—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ)")

async def lot_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    args = context.args
    if not args:
        await update.message.reply_text("–ü—Ä–∏—à–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ –ª–æ—Ç: /lot https://bid.cars/ru/lot/....")
        return
    link = args[0].strip()
    await update.message.reply_text(f"üîé –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –ª–æ—Ç: {link} ...")
    try:
        lot = await asyncio.get_event_loop().run_in_executor(None, parse_bidcars_lot, link)
    except Exception as e:
        logger.exception("parse failed")
        await update.message.reply_text("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–æ—Ä–µ –ª–æ—Ç–∞. –ü—Ä–æ–≤–µ—Ä—å —Å—Å—ã–ª–∫—É.")
        return
    if not lot:
        await update.message.reply_text("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ –ª–æ—Ç—É.")
        return

    # estimate repair roughly based on damage area
    damage = lot.get("damage", "–ø–µ—Ä–µ–¥–Ω—è—è —á–∞—Å—Ç—å")
